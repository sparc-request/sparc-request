-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%table.service_calendar
  %thead.default_calendar
    %tr.table_header
      %th.services_header{:rowspan => 2, :style => "height: 88px"}= t(:calendar_page)[:headers][:services]
      - if @portal
        %th{:rowspan => 2, :colspan => 7, :height => 40, :width => 375}
      -else
        %th.unit_costs_header{:colspan => 2}= t(:calendar_page)[:headers][:unit_costs]
        %th.qty_type_header{:rowspan => 2}= t(:calendar_page)[:headers][:number]
        %th.number_of_units_header{:rowspan => 2}= t(:calendar_page)[:headers][:qty_type]
        %th.qty_unit_header{:style => "width:50px;", :rowspan => 2}= t(:calendar_page)[:headers][:number]
        %th.unit_type_header{:rowspan => 2}= t(:calendar_page)[:headers][:unit_type]
        %th{:rowspan => 2, :colspan => 5, :height => 40, :width => 375}

      %th= image_tag 'spinner.gif', :class => 'service_calendar_spinner'
      - if @study_tracker
        %th{:rowspan => 2}

    %tr.table_header
      - unless @portal || @study_tracker
        %th.service_rate_header= t("calendar_page.headers.service_rate")
        %th.your_cost_header= t("calendar_page.headers.your_cost")
      - if @portal || @study_tacker
        %th &nbsp;
      - else
        %th.total_per_study= t("calendar_page.headers.total_per_study")

  %tbody.cell-border
    %tr.section_header
      %th{:colspan => (@study_tracker) ? 13 : 14}
        = t("calendar_page.headers.other_services")

        #nan_error{:style => 'display:none;'}
          = t(:service_requests)[:detail_list][:nan]

        #one_time_fee_errors{:style => 'display:none;'}
          = t(:service_requests)[:detail_list][:text1]
          %span#quantity
          = t(:service_requests)[:detail_list][:text2]
          %span#unit_minimum
          %br
          = t(:service_requests)[:detail_list][:text3]

        #unit_max_error{:style => 'display:none;'}
          = t(:service_requests)[:detail_list][:text4]
          %span#unit_quantity
          = t(:service_requests)[:detail_list][:text5]
          %span#unit_max
          %br
          = t(:service_requests)[:detail_list][:text6]

    - @service_request.service_list(true).each do |key, value| # get only one time fee services and group them
      - next unless @sub_service_request.nil? or @sub_service_request.organization.name == value[:process_ssr_organization_name]
      %tr.sub_section_header
        %th.otf{:colspan => (@study_tracker) ? 13 : 14}= value[:name]
        - value[:line_items].each do |line_item|
          %tr.line_item.otfs{:class => cycle('odd', '', :name => 'otfs'), :"data-unit_factor" => line_item.service.displayed_pricing_map.unit_factor}
            %td.service_name
              = line_item.service.name
              - unless @tab == 'calendar'
                = hidden_field_tag "service_request[line_items_attributes][#{line_item.id}][id]", line_item.id
            %td.service_rate{:class => "service_rate_#{line_item.id}"}= display_service_rate line_item
            %td.your_cost{:"data-your_cost" => line_item.applicable_rate}= display_your_cost line_item
            - if @tab == 'calendar'
              %td.line_item_quantity.center= line_item.quantity
              %td= line_item.service.try(:displayed_pricing_map).try(:quantity_type).try(:humanize)
              - if line_item.service.try(:displayed_pricing_map).otf_unit_type == 'N/A'
                %td
                %td
              - else
                %td.units_per_quantity.center{:style => "width:50px;"}
                  %span{:style => "padding-right:5px;"} /
                  = line_item.units_per_quantity
                %td= line_item.service.try(:displayed_pricing_map).try(:otf_unit_type).try(:humanize)
            - else
              %td= text_field_tag "service_request[line_items_attributes][#{line_item.id}][quantity]", line_item.quantity, |
                   :unit_minimum => line_item.service.displayed_pricing_map.quantity_minimum, :class => 'line_item_quantity', :current_quantity => line_item.quantity, :previous_quantity => line_item.quantity, |
                   :update => update_otf_qty_and_units_per_qty_service_request_service_calendars_path(@service_request, :line_item_id => line_item.id, :type => 'qty') |
              %td= line_item.service.try(:displayed_pricing_map).try(:quantity_type).try(:humanize)
              -#
              - if line_item.service.try(:displayed_pricing_map).otf_unit_type == 'N/A'
                %td
                %td
              -else
                %td{:style => "width:50px;"}
                  %span{:style => "padding-right:5px;"} /
                  = text_field_tag "service_request[line_items_attributes][#{line_item.id}][units_per_quantity]", line_item.units_per_quantity, |
                     "data-qty_max" => line_item.service.displayed_pricing_map.units_per_qty_max, :class => "units_per_quantity", :current_units_per_quantity => line_item.units_per_quantity, |
                     :update => update_otf_qty_and_units_per_qty_service_request_service_calendars_path(@service_request, :line_item_id => line_item.id, :type => 'units_per_qty') |
                %td= line_item.service.try(:displayed_pricing_map).try(:otf_unit_type).try(:humanize)
            %td{:colspan => 5}
            %td{:class => "otf_total total_#{line_item.id}"}= display_one_time_fee_direct_cost line_item
            - if @study_tracker
              %td= link_to(image_tag('dashboard/cancel.png'), 'javascript:void(0);', :'data-line_item_id' => line_item.id, :class => 'delete_data')

    %tr.totals_section.begin_totals{:class => cycle('odd', '', :name => 'otfs')}
      %td{:colspan => 5}= t("calendar_page.labels.total_direct_other")
      %td{:colspan => 7}
      %td.otf_total_direct_cost= display_total_direct_cost_per_study_otfs @service_request, @line_items
      - if @study_tracker
        %td

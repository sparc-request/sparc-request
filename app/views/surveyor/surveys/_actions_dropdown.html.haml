-# Copyright Â© 2011-2022 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.dropdown
	%button.btn.btn-light.dropdown-toggle.w-100{ id: "surveyActions#{survey.id}", role: 'button', data: { toggle: 'dropdown', boundary: 'window' }, aria: { haspopup: 'true', expanded: 'false' } }
		= t(:constants)[:prompts][:select_action]
	.dropdown-menu{ aria: { labelledby: "surveyActions#{survey.id}" } }
		= link_to surveyor_survey_preview_path(survey), remote: true, class: 'dropdown-item text-info' do
			= icon('fas', 'eye mr-1')
			= t(:actions)[:preview]

		- disabled_action = survey.questions.none? || survey.surveyable_type == 'Identity'
		= link_to surveyor_survey_updater_path(survey, klass: 'survey', survey: { active: !survey.active }), remote: true, method: :put, class: "dropdown-item #{disabled_action ? 'disabled' : ''}" do
			- if survey.active?
				.text-danger
					= icon('fas', 'times mr-1')
					= t(:actions)[:disable]
			- else
				%div{ class: disabled_action ? '' : 'text-success' }
					= icon('fas', 'check mr-1')
					= t(:actions)[:activate]

		= link_to surveyor_survey_copy_path(survey), remote: true, method: :post, class: 'dropdown-item text-primary' do
			= icon('fas', 'copy mr-1')
			= t(:actions)[:copy]

		= link_to edit_surveyor_survey_path(survey), remote: true, class: "dropdown-item #{survey.active? ? 'disabled' : 'text-warning'}" do
			= icon('far', 'edit mr-1')
			= t(:actions)[:edit]

		= link_to surveyor_survey_path(survey), remote: true, method: :delete, class: "dropdown-item #{survey.active? || survey.has_responses? ? 'disabled' : 'text-danger'}", data: { confirm_swal: 'true' } do
			= icon('fas', 'trash-alt mr-1')
			= t(:actions)[:delete]

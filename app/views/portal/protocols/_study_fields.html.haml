-# Copyright Â© 2011-2016 MUSC Foundation for Research Development.
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.user-edit-protocol-view

  :javascript
    $(document).ready(function() {
      Sparc.study.ready();
    });

  #epic_box_alert{style: 'display:none;', title: t(:epic_box)[:epic_box_error]}
    = t(:epic_box)[:epic_box_alert]
    
  .grid_7.box
    .info
      %fieldset
        %legend= t(:study_form)[:needed_info]
        .field
          = f.label :short_title, t(:protocol_shared)[:title]
          = f.text_field :short_title
        
        .field
          = f.label :title, t(:study_form)[:title]
          = f.text_field :title
        
        .field
          = f.label :funding_status, t(:protocol_shared)[:funding_status]
          = f.select :funding_status, options_for_select(FUNDING_STATUSES, study.funding_status), :include_blank => t(:study_form)[:status_blank]
    
        .pending_funding    
          .field
            = f.label :potential_funding_source, t(:protocol_shared)[:potential_funding_source]
            = f.select :potential_funding_source, options_for_select(POTENTIAL_FUNDING_SOURCES, study.potential_funding_source), :include_blank => t(:study_form)[:potential_blank]
    
          / Internal Funded Pilot Project selected
          .internal_potential_funded_pilot_project
            .field
              = f.label :potential_funding_source_other, t(:study_form)[:potential_funding_source_other]
              = f.text_field :potential_funding_source_other
        
        .funded          
          .field
            = f.label :funding_source, t(:protocol_shared)[:funding_source]
            = f.select :funding_source, options_for_select(FUNDING_SOURCES, study.funding_source), :include_blank => t(:study_form)[:funding_blank]
    
          / Internal Funded Pilot Project selected
          .internal_funded_pilot_project
            .field
              = f.label :funding_source_other, t(:study_form)[:funding_source_other]
              = f.text_field :funding_source_other
        .clear
    
        .funded
          .federal
            .field
              = f.label :federal_grant_title, t(:study_form)[:federal_grant_title]
              = f.text_field :federal_grant_title
    
            .field
              = f.label :federal_grant_code_id, t(:study_form)[:federal_grant_code_id]
              = f.select :federal_grant_code_id, options_for_select(FEDERAL_GRANT_CODES, study.federal_grant_code_id), :include_blank => t(:study_form)[:code_blank]
    
            .field
              = f.label :federal_phs_sponsor, t(:study_form)[:federal_phs_sponsor]
              = f.select :federal_phs_sponsor, options_for_select(FEDERAL_GRANT_PHS_SPONSORS, study.federal_phs_sponsor), :include_blank => t(:study_form)[:phs_blank]
    
            %br
            %span -OR-
            %br
        
            .field
              = f.label :federal_non_phs_sponsor, t(:study_form)[:federal_non_phs_sponsor]
              = f.select :federal_non_phs_sponsor, options_for_select(FEDERAL_GRANT_NON_PHS_SPONSORS, study.federal_non_phs_sponsor), :include_blank => t(:study_form)[:phs_blank]
    
            .field
              = f.label :federal_grant_serial_number, t(:study_form)[:federal_grant_serial_number]
              = f.text_field :federal_grant_serial_number
    
        .field
          = f.label :study_phase, t(:study_form)[:study_phase]
          = f.select :study_phase, options_for_select(STUDY_PHASES, study.study_phase), :include_blank => t(:study_form)[:phase_blank]
          
        .field
          = f.label :sponsor_name, t(:study_form)[:sponsor_name]
          = f.text_field :sponsor_name
      %fieldset{:style => "#{USE_EPIC ? nil : 'display:none;'}"}
        %legend= t(:study_form)[:epic]
        .field
          = f.label :selected_for_epic, t(:study_form)[:push_to_epic]

          / Only DISPLAY epic box data as readonly in admin UNLESS changing from a virgin project 
          - if (admin && !@protocol.virgin_project? && (!@protocol.changed.include?('selected_for_epic') || @protocol.changed_attributes()['selected_for_epic']))
            %span.epic_selected.display_epic_answers
              = f.object.selected_for_epic ? "Yes" : "No"
              - if f.object.selected_for_epic
                = f.hidden_field :selected_for_epic, value: true
              - elsif !f.object.selected_for_epic
                = f.hidden_field :selected_for_epic, value: false
            .study_type{style: "#{f.object.selected_for_epic ? '' : 'display:none;'}"}
              .field.study_type_questions
                = f.label :study_type_questions, t(:study_form)[:study_type_questions]
                = hidden_field_tag :viewing_admin, "admin"
              = f.fields_for :study_type_answers, study.study_type_answers do |answer|
                - if answer.object.study_type_question.study_type_question_group.active && study.active? && answer.object.answer != nil
                  .field{id: "study_type_answer_#{answer.object.study_type_question.friendly_id}", style: ( answer.object.study_type_question.friendly_id == 'certificate_of_conf' || answer.object.answer != nil ? nil : "display:none;")}
                    = answer.label :answer, answer.object.study_type_question.question, class: "long"
                    %div.display_epic_answers
                      = answer.object.answer == true ? "Yes" : "No"
                - elsif !answer.object.study_type_question.study_type_question_group.active && !study.active? && answer.object.answer != nil
                  .field{id: "study_type_answer_#{answer.object.study_type_question.friendly_id}", style: ( answer.object.study_type_question.friendly_id == 'certificate_of_conf' || answer.object.answer != nil ? nil : "display:none;")}
                    = answer.label :answer, answer.object.study_type_question.question, class: "long"
                    %div.display_epic_answers
                      = answer.object.answer == true ? "Yes" : "No"
                      
          - else
            %span.non_standard_usage_of_radio_buttons
              = f.radio_button :selected_for_epic, true
              = f.label :selected_for_epic, "Yes"
              = f.radio_button :selected_for_epic, false
              = f.label :selected_for_epic, "No"
            .study_type{style: "#{f.object.selected_for_epic ? '' : 'display:none;'}"}
              .space_bar
              = f.label :study_type_questions, t(:study_form)[:study_type_questions]
              - if admin
                = hidden_field_tag :can_edit_admin_study, "can_edit_study"
              = hidden_field_tag :viewing_admin, "portal"
              = f.fields_for :study_type_answers, study.study_type_answers do |answer|
                - if answer.object.study_type_question.study_type_question_group.active 
                  .field{id: "study_type_answer_#{answer.object.study_type_question.friendly_id}", style: "#{answer.object.answer != nil ? 'display:block' : 'display:none;'}"}
                    = answer.label :answer, answer.object.study_type_question.question, class: "long"
                    = answer.select :answer, options_for_select([['Yes', true], ['No', false]], answer.object.answer), {include_blank: "Select One"}, id: "study_type_answer_#{answer.object.study_type_question.friendly_id}_answer"
                    = answer.hidden_field :study_type_question_id
              

      %fieldset
        %legend= t(:study_form)[:optional_text]
        .sub_text= t(:study_form)[:optional_text2]
        .clear
        .field
          = f.label :udak_project_number, t(:study_form)[:udak_project_number]
          = f.text_field :udak_project_number

        .field.indirect_cost_rate
          = f.label :indirect_cost_rate, t(:study_form)[:rate]
          = f.text_field :indirect_cost_rate

        .pending_funding
          .field
            = f.label :funding_rfa, t(:study_form)[:funding_rfa]
            = f.text_field :funding_rfa

          .field
            = f.label :potential_funding_start_date, t(:study_form)[:potential_funding_start_date]
            = text_field_tag :potential_funding_start_date, (study.potential_funding_start_date.strftime('%-m/%d/%Y') rescue nil)
            = f.hidden_field :potential_funding_start_date

        .funded
          .field
            = f.label :funding_start_date, t(:study_form)[:funding_start_date]
            = text_field_tag :funding_start_date, (study.funding_start_date.strftime('%-m/%d/%Y') rescue nil)
            = f.hidden_field :funding_start_date


      %fieldset
        %legend= t(:study_form)[:research]
        %div
          = f.fields_for :research_types_info do |rt|
            .field.human_subjects
              = rt.label :human_subjects, t(:study_form)[:human_subjects]
              = rt.check_box :human_subjects
          = f.fields_for :human_subjects_info do |hs|
            .field.nct_number
              = hs.label :nct_number, t(:study_form)[:nct_number]
              = hs.text_field :nct_number

            .field.hr_number
              = hs.label :hr_number, t(:study_form)[:hr_number]
              = hs.text_field :hr_number
  
            .field.pro_number
              = hs.label :pro_number, t(:study_form)[:pro_number]
              = hs.text_field :pro_number
  
            .field.irb_of_record
              = hs.label :irb_of_record, t(:study_form)[:irb_of_record]
              = hs.text_field :irb_of_record
  
            .field.submission_type
              = hs.label :submission_type, t(:study_form)[:submission_type]
              = hs.select :submission_type, options_for_select(SUBMISSION_TYPES, study.human_subjects_info.submission_type), :include_blank => t(:study_form)[:submission_type]

            .field.approval_pending
              = hs.label :approval_pending, t(:study_form)[:approval_pending]
              = hs.check_box :approval_pending
  
            .field.irb_approval_date
              = hs.label :irb_approval_date, t(:study_form)[:irb_approval_date]
              = text_field_tag :irb_approval_date, (study.human_subjects_info.irb_approval_date.strftime('%_m/%d/%Y') rescue nil)
              = hs.hidden_field :irb_approval_date
  
            .field.irb_expiration_date
              = hs.label :irb_expiration_date, t(:study_form)[:irb_expiration_date]
              = text_field_tag :irb_expiration_date, (study.human_subjects_info.irb_expiration_date.strftime('%_m/%d/%Y') rescue nil)
              = hs.hidden_field :irb_expiration_date
  
          = f.fields_for :research_types_info do |rt|
            .field.vertebrate_animals
              = rt.label :vertebrate_animals, t(:study_form)[:vertebrate_animals]
              = rt.check_box :vertebrate_animals
  
          = f.fields_for :vertebrate_animals_info do |va|
            .field.iacuc_number
              = va.label :iacuc_number, t(:study_form)[:iacuc_number]
              = va.text_field :iacuc_number
  
            .field.name_of_iacuc
              = va.label :name_of_iacuc, t(:study_form)[:name_of_iacuc]
              = va.text_field :name_of_iacuc
  
            .field.iacuc_approval_date
              = va.label :iacuc_approval_date, t(:study_form)[:iacuc_approval_date]
              = text_field_tag :iacuc_approval_date, (study.vertebrate_animals_info.iacuc_approval_date.strftime('%_m/%d/%Y') rescue nil)
              = va.hidden_field :iacuc_approval_date
  
            .field.iacuc_expiration_date
              = va.label :iacuc_expiration_date, t(:study_form)[:iacuc_expiration_date]
              = text_field_tag :iacuc_expiration_date, (study.vertebrate_animals_info.iacuc_expiration_date.strftime('%_m/%d/%Y') rescue nil)
              = va.hidden_field :iacuc_expiration_date
          
          = f.fields_for :research_types_info do |rt|
            .field.investigational_products
              = rt.label :investigational_products, t(:study_form)[:investigational_products]
              = rt.check_box :investigational_products
  
          = f.fields_for :investigational_products_info do |ip|
            .field.ind_number
              = ip.label :ind_number, t(:study_form)[:ind_number]
              = ip.text_field :ind_number
  
            .field.ind_on_hold
              = ip.label :ind_on_hold, t(:study_form)[:ind_on_hold]
              = ip.check_box :ind_on_hold
  
            .field.ide_number
              = ip.label :ide_number, t(:study_form)[:ide_number]
              = ip.text_field :ide_number
  
  
          = f.fields_for :research_types_info do |rt|
            .field.ip_patents
              = rt.label :ip_patents, t(:study_form)[:ip_patents]
              = rt.check_box :ip_patents
  
          = f.fields_for :ip_patents_info do |ip|
            .field.patent_number
              = ip.label :patent_number, t(:study_form)[:patent_number]
              = ip.text_field :patent_number
  
            .field.inventors
              = ip.label :inventors, t(:study_form)[:inventors]
              = ip.text_area :inventors
              .clear
  
      %fieldset
        %legend= t(:study_form)[:type] 
        %div
          = f.fields_for :study_types, f.object.study_types.sort_by(&:position) do |rt|
            .field{:class => rt.object.name}
              = rt.label :name, "#{StudyType::TYPES[rt.object.name]}:"
              = rt.check_box "_destroy", {:checked => !rt.object.new}, false, true
              = rt.hidden_field :name, :value => rt.object.name
  
      %fieldset
        %legend= t(:study_form)[:impact]
        %div
          = f.fields_for :impact_areas, f.object.impact_areas.sort_by(&:position) do |rt|
            .field{:class => rt.object.name}
              = rt.label :name, "#{ImpactArea::TYPES[rt.object.name]}:"
              = rt.check_box "_destroy", {:checked => !rt.object.new}, false, true
              = rt.hidden_field :name, :value => rt.object.name
              - if rt.object.name == "other"
                .field.impact_other
                  = rt.label :other_text, "Enter area:"
                  = rt.text_field :other_text, :id => "study_impact_areas_other"

      %fieldset
        %legend= t(:study_form)[:affiliations] 
        %div
          = f.fields_for :affiliations, f.object.affiliations.sort_by(&:position) do |rt|
            .field{:class => rt.object.name}
              = rt.label :name, "#{Affiliation::TYPES[rt.object.name]}:"
              = rt.check_box "_destroy", {:checked => !rt.object.new}, false, true
              = rt.hidden_field :name, :value => rt.object.name

  %br.clear
  #actions
    = submit_tag(t(:study_form)[:save])
    - if admin
      = link_to "Cancel", "/portal/admin/sub_service_requests/#{@sub_service_request.id}", :class => "admin_cancel_link"
    - else
      = link_to t(:protocol_shared)[:cancel], portal_root_path
    .clear

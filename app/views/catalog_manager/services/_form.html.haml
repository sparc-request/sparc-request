-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

= form_for @service, :url => catalog_manager_service_path(@service), :remote => true, :id => 'entity_form' do |f|
  .errorExplanation#errorExplanation{:style => 'display:none;'}

  = hidden_field_tag 'org_unit[id]', @service.id # added for autocomplete to use
  = hidden_field_tag 'service[id]', @service.id

  - unless @service.has_service_providers?
    .service_provider_error
      = t(:organization_form)[:service_error]

  #entity_description
    %p.org_tree= display_organization_tree(f.object.organization) + ' / ' + f.object.name
    .service_form

      %fieldset.actions
        .legend= t(:organization_form)[:actions]
        = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn'
        %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}
      %br

      %fieldset#gen_info.parent.active
        .legend= t(:organization_form)[:gen_info]
        %fieldset.single_fieldset{:style => "display:block;"}
          %table
            %tr
              %th= f.label :program, t(:organization_form)[:program]
              %td= f.select :program, options_for_select(@programs.map{|p| [p.name, p.id]}, @service.program.id)
            %tr
              %th= f.label :core, t(:organization_form)[:core]
              %td#core_list= f.select :core, options_for_select(@cores.map{|c| [c.name, c.id]}.insert(0, ['None', 0]), (@service.core.id if @service.core))
            %tr
              %th= f.label :name, t(:organization_form)[:name]
              %td= f.text_field :name, :class => "service_name validate"
            %tr
              %th= f.label :abbreviation, t(:organization_form)[:abbreviation]
              %td= f.text_field :abbreviation
            %tr
              %th= f.label :description, t(:organization_form)[:description]
              %td= f.text_area :description, :rows => 8
            %tr
              %th= f.label :order, t(:organization_form)[:order]
              %td= f.text_field :order, :class => 'service_order validate'
            %tr
              %th= f.label :disabled, t(:organization_form)[:disabled]
              %td= f.check_box :is_available, {:checked => (@service.is_available.nil? ? false : !@service.is_available) }, false, true
            %tr
              %th= f.label :one_time_fee, t(:organization_form)[:one_time_fee]
              %td= f.check_box :one_time_fee, :class => "one_time_fee", :'data-pricing_map_ids' => pricing_map_ids(@service), :disabled => (@service.line_items_count > 0)
            %tr
              %th= t(:organization_form)[:tag_list]
              %td
                - Tag.all.each do |tag|
                  %span{:style => "margin-right:10px;"}
                    %span= f.label (t(:tags)[tag.name.gsub(" ", "_").to_sym] ? t(:tags)[tag.name.gsub(" ", "_").to_sym] : tag.name.humanize)
                    %span= f.check_box :tag_list, { :multiple => true }, tag.name, nil

      %br

      %fieldset.service_level_components.parent
        .legend
          = t(:organization_form)[:service_level_components]

        %fieldset.single_fieldset
          .secondary_header Components
          %table
            %tbody
              = f.hidden_field :components
              - if @service.components
                - components = @service.components.split(",")
                - components_length = components.length
                - (0...components_length).each do |i|
                  %tr{id: "service_component_position_#{i}"}
                    %td
                      %input.service_component_field{ value: components[i], position: i, type: 'text'}
                      %button.delete{type: "button", position: i} Remove
              %tr{id: "service_component_position_#{components_length}"}
                %td
                  %input.service_component_field{ position: components_length, type: 'text' }

          %button.add{type: "button"} Add components
      %br

      #epic_wrapper{:style => @service.tag_list.include?("epic") ? "display: block;" : "display: none;"}
        %fieldset#epic_fieldset.parent
          .legend= t(:organization_form)[:epic_info]
          %fieldset.single_fieldset
            %table
            %tr
              %th= f.label :eap_id, t(:organization_form)[:eap_id]
              %td= f.text_field :eap_id
            %tr
              %th= f.label :cpt_code, t(:organization_form)[:cpt_code]
              %td= f.text_field :cpt_code
            %tr
              %th= f.label :charge_code, t(:organization_form)[:charge_code]
              %td= f.text_field :charge_code
            %tr
              %th= f.label :revenue_code, t(:organization_form)[:revenue_code]
              %td= f.text_field :revenue_code
            %tr
              %th= f.label :send_to_epic, t(:organization_form)[:send_to_epic]
              %td= f.check_box :send_to_epic
        %br

      %fieldset#pricing.parent
        .legend= t(:organization_form)[:pricing]
        %fieldset.single_fieldset
          .secondary_header= t(:organization_form)[:pricing_maps]
          %input.add_pricing_map{:type => 'button', :value => t(:organization_form)[:add_map]}
          .pricing_map_accordion
            - @service.pricing_maps.each do |pricing_map|
              = render 'pricing_map', :pricing_map => pricing_map, :pricing_map_disabled => disable_pricing_map(pricing_map, @user.can_edit_historical_data_for?(@service.organization)), :can_edit_historical_data => @user.can_edit_historical_data_for?(@service.organization), :entity => @service

      %br

      %fieldset.parent
        .legend= t(:organization_form)[:related_services]
        %fieldset.single_fieldset
          #rs_info= render :partial => 'catalog_manager/shared/related_services', :locals => {:entity => @service}

      %br

      %fieldset.actions
        .legend= t(:organization_form)[:actions]
        = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn'
        %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}

        %table
          %tr
            %td
              .ui-corner-all.blank_field_errors= t(:organization_form)[:blank_field_errors]
          %tr
            %td
              .ui-corner-all.per_patient_errors= t(:organization_form)[:per_patient_errors]
          %tr
            %td
              .ui-corner-all.otf_field_errors= t(:organization_form)[:otf_field_errors]

.blank_pricing_map
  - pricing_map = @service.pricing_maps.build
  = render :partial => 'pricing_map', :locals => { :pricing_map => pricing_map, :pricing_map_disabled => false, :can_edit_historical_data => @user.can_edit_historical_data_for?(@service.organization), :entity => @service }

:javascript
  $(document).ready( function() {
    Sparc.config.ready();
    Sparc.services.ready();
    $('.service_name').change();
  })

-# Copyright Â© 2011-2016 MUSC Foundation for Research Development.
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

= nested_form_for @sub_service_request, :url => study_tracker_sub_service_request_path do |f|
  - default_percent_subsidy = @sub_service_request.subsidy.try(:percent_subsidy).try(:*, 100).try(:round, 2) 
  - if @sub_service_request.errors.any?
    #error_explanation
      %h2
        = pluralize(@sub_service_request.errors.count, "error")
        prohibited these payments from being saved:
      %ul
        - @sub_service_request.errors.full_messages.each do |msg|
          %li= msg
  %table#payments_list
    %thead
      %tr
        %th.date_submitted= t(:study_tracker)[:payments][:submitted]
        %th.amount_invoiced= t(:study_tracker)[:payments][:amt_invoiced]
        %th.amount_received= t(:study_tracker)[:payments][:amt_received]
        %th.date_received= t(:study_tracker)[:payments][:date_received]
        %th.payment_method= t(:study_tracker)[:payments][:pay_method]
        %th.percent_subsidy= t(:study_tracker)[:payments][:percent_subsidy]
        %th.details= t(:study_tracker)[:payments][:details]
        %th.documents= t(:study_tracker)[:payments][:documents]
        %th.remove
    %tbody
      = f.fields_for :payments, wrapper: false, builder: SparcFormBuilder do |payment_form|
        %tr.fields
          %td.date_submitted= payment_form.datepicker :formatted_date_submitted, size: 10, dateFormat: "m/dd/yy"
          %td.amount_invoiced= payment_form.currency_text_field :amount_invoiced, size: 6
          %td.amount_received= payment_form.currency_text_field :amount_received, size: 6
          %td.date_received= payment_form.datepicker :formatted_date_received, size: 10, dateFormat: "m/dd/yy"
          %td.payment_method= payment_form.select :payment_method, options_for_select(Payment::PAYMENT_METHOD_OPTIONS, payment_form.object.payment_method), :include_blank => "-Choose Method-"
          %td.percent_subsidy
            - percent_subsidy = payment_form.object.new_record? ? default_percent_subsidy : payment_form.object.percent_subsidy
            - percent_subsidy_class = payment_form.object.new_record? ? 'new_percent_subsidy' : 'existing_percent_subsidy'
            = payment_form.hidden_field :percent_subsidy, :value => percent_subsidy, :class => percent_subsidy_class
            = percent_subsidy.nil? ? nil : "#{percent_subsidy}%"


          %td.details= payment_form.text_area :details, cols: 20, rows: 2
          %td.documents
            = payment_form.fields_for :uploads, html: { multipart: true } do |upload_form|
              - if upload_form.object.new_record?
                = upload_form.file_field :file
              - else 
                .file_attachment
                  = link_to upload_form.object.file.original_filename, upload_form.object.file.url, class: "filename", target: "_blank"
                  = upload_form.link_to_remove t(:study_tracker)[:payment_uploads][:remove], confirm: t(:study_tracker)[:payment_uploads][:remove_confirm], class: "uploads"
            = payment_form.link_to_add t(:study_tracker)[:payment_uploads][:add], :uploads, class: "uploads"
          %td.remove= payment_form.link_to_remove '', confirm: t(:study_tracker)[:payments][:remove_confirm], class: "payments"
  %p= f.link_to_add t(:study_tracker)[:payments][:add], :payments, data: { target: '#payments_list tbody', default_percent_subsidy: default_percent_subsidy }, class: "payments payments_add_button"
  %p.buttons= f.submit t(:study_tracker)[:save], :id => "save_payments"

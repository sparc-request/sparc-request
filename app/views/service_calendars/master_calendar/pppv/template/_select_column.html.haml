-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- editable_ssrs = sub_service_request ? [sub_service_request] : service_request.sub_service_requests.select(&:can_be_edited?)

- case service_request.protocol.default_billing_type
- when "r" then billing_type_method = "research_billing_qty"
- when "t" then billing_type_method = "insurance_billing_qty"
- when "o" then billing_type_method = "effort_billing_qty"

- checked = visit_group.visits.none?{ |v| v.public_send(billing_type_method).zero? && editable_ssrs.include?(v.line_items_visit.line_item.sub_service_request) }

- check_param         = checked ? 'uncheck'     : 'check'
- icon                = checked ? 'times'       : 'check'
- klass               = checked ? 'btn-danger'  : 'btn-success'
- tooltip             = t(:calendars)[:editable_fields][:column_select][checked ? :uncheck : :check]
- url                 = toggle_calendar_column_service_calendars_path(srid: service_request.id, visit_group_id: visit_group.id, page: page, :"#{check_param}" => 'true')
- url                += "&ssrid=#{sub_service_request.id}" if sub_service_request

%th.check-column.text-center{ colspan: 3, tabindex: 0, class: editable ? 'editable' : '', id: "toggleColumn#{visit_group.id}", title: tooltip, data: { toggle: 'tooltip' } }
  = link_to icon('fas', icon), url, method: :post, remote: true, class: ['btn btn-sq', klass, editable ? '' : 'disabled'], data: { confirm_swal: 'true', text: t('calendars.confirm_column_select') }

-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

= javascript_include_tag 'protocol'

= form_tag navigate_service_request_path(@service_request), :id => 'navigation_form', :class =>'form-inline' do
  = hidden_field_tag :location, ''
  = hidden_field_tag :validates, ''
  = hidden_field_tag :current_location, @page
  = hidden_field_tag :protocol_id, @service_request.protocol_id
  = render :partial => 'steps'
  = render :partial => 'errors'
  .grid_9.col-md-9
    .select-project-view
      .dotted-border.left
        %p.instructions= t("study_assignment.instructions_1")

        %br

        .service-list= render :partial => 'service_list'

        %br
        %br

        %p.notice= t("study_assignment.notice")

        %br
        %hr
        %br

        - if @service_request.status == 'first_draft'
          .type-select.center.form-group
            - if @sub_service_request.nil?
              = t("study_assignment.research_study")
              = radio_button_tag :protocol, "Research Study", (@service_request.protocol.try(:type) == 'Project' ? false : true), :class => 'form-control'
              = t("study_assignment.research_project")
              = radio_button_tag :protocol, "Research Project", (@service_request.protocol.try(:type) == 'Project' ? true : false), :class => 'form-control'
              %span#infotip= image_tag('information.png')
              %br
              %br

          .existing-study.center
            #study.study-select
              #study-select= render :partial => 'study_select', :locals => {:studies => @studies} unless @studies.empty?
              = link_to(t("study_assignment.new_study"), new_service_request_study_path(@service_request), :class => 'new-study blue-button btn btn-primary') if @sub_service_request.nil?
              %br
              %br

          .existing-project.center
            #project.project-select
              #project-select= render :partial => 'project_select', :locals => {:projects => @projects} unless @projects.empty?
              = link_to(t("study_assignment.new_project"), new_service_request_project_path(@service_request), :class => 'new-project blue-button btn btn-primary') if @sub_service_request.nil?
              %br
              %br
        - else
          .previously_submitted
            .inline.form-group
              - if @service_request.protocol.is_study?
                #study.study-select
                  = raw(t(:study_assignment)[:current_study])
                  %span{style: 'font-weight:bold;'}= @service_request.protocol.display_protocol_id_and_title
                  .edit-study.blue-button.btn.btn-primary.edit_submitted_study= t(:study_assignment)[:edit_study]
                %br
                = t(:study_assignment)[:previously_submitted_study]
              - else
                #project.project-select
                  = raw(t(:study_assignment)[:current_project])
                  %span{style: 'font-weight:bold;'}= @service_request.protocol.display_protocol_id_and_title
                  .edit-project.blue-button.btn.btn-primary.edit_submitted_project= t(:study_assignment)[:edit_project]
                %br
                = t(:study_assignment)[:previously_submitted_project]

  .grid_3.protocol-view-right.right.col-md-3
    #services.ui-widget.ui-widget-content.cart-view
      %h3
        = t("study_assignment.sidebar_box.my_services")
        %span#cart-help= t("study_assignment.sidebar_box.help")
      .line-items= render :partial => 'catalogs/cart'
    = navigation_link t(:right_navigation)[:catalog], @back, 'catalog-button btn btn-info btn-lg btn-block'
    = render :partial => 'right_navigation'
.continue.col-md-12= render :partial => 'service_requests/navigation'

- if @ctrc_services
  #ctrc_dialog
    = I18n.t('protocol_information.ctrc_services_exist', :protocol_id => @service_request.protocol.id, :ssr_id => @ssr_id, :short_title => @service_request.protocol.short_title)
    %br
    %br
    #redirect{:style => "float:right"}= link_to "Ok", protocol_service_request_path(@service_request)

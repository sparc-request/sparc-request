-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%section.pt-3#otherDetails
  .card
    .card-body.p-5
      %h2.text-center
        = t('protocols.form.other_details.header')
      %h4.text-muted.text-center.mb-5
        = t('constants.prompts.check_all')

      %section#studyTypes
        .form-group
          %h4.pb-2.mb-2.border-bottom
            = t('protocols.form.other_details.study_types')

        .form-row
          = f.fields_for :study_types, protocol.study_types.sort_by(&:position) do |ff_st|
            - checked = !ff_st.object.new_record? && !ff_st.object.marked_for_destruction?
            .form-group.col-6
              = ff_st.hidden_field :name, value: ff_st.object.name
              .custom-control.custom-checkbox.custom-control-lg
                = ff_st.check_box :_destroy, { checked: checked, class: 'custom-control-input study-type' }, false, true
                = ff_st.label :_destroy, PermissibleValue.get_value('study_type', ff_st.object.name), class: 'custom-control-label'

      %section.mt-3#impactAreas
        .form-group
          %h4.pb-2.mb-2.border-bottom
            = t('protocols.form.other_details.impact_areas')

        .form-row
          = f.fields_for :impact_areas, protocol.impact_areas.sort_by(&:position) do |ff_ia|
            - checked = !ff_ia.object.new_record? && !ff_ia.object.marked_for_destruction?
            .form-group.col-6
              = ff_ia.hidden_field :name, value: ff_ia.object.name
              .custom-control.custom-checkbox.custom-control-lg
                = ff_ia.check_box :_destroy, { checked: checked, class: 'custom-control-input impact-area' }, false, true
                = ff_ia.label :_destroy, PermissibleValue.get_value('impact_area', ff_ia.object.name), class: 'custom-control-label'
            - if ff_ia.object.name == "other"
              .form-group.col-6{ class: [checked ? '' : 'd-none', ff_ia.options[:child_index].odd? ? 'offset-6' : ''] }
                = ff_ia.label :other_text, t('constants.prompts.please_specify')
                = ff_ia.text_field :other_text, class: 'form-control'

      %section.mt-3#affiliations
        .form-group
          %h4.pb-2.mb-2.border-bottom
            = t('protocols.form.other_details.affiliations')

        .form-row
          = f.fields_for :affiliations, protocol.affiliations.sort_by(&:position) do |ff_a|
            - checked = !ff_a.object.new_record? && !ff_a.object.marked_for_destruction?
            .form-group.col-6
              = ff_a.hidden_field :name, value: ff_a.object.name
              .custom-control.custom-checkbox.custom-control-lg
                = ff_a.check_box :_destroy, { checked: checked, class: 'custom-control-input affiliation' }, false, true
                = ff_a.label :_destroy, PermissibleValue.get_value('affiliation_type', ff_a.object.name), class: 'custom-control-label'



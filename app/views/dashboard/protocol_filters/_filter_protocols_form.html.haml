-# Copyright Â© 2011-2019 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%aside#protocolFilters
  .card
    = form_for_filterrific filterrific, url: dashboard_protocols_path, remote: true, html: { id: 'protocolFiltersForm', autocomplete: 'off' } do |f|
      .card-header.bg-primary.text-white
        %h3.mb-0.mr-auto
          = t('dashboard.protocol_filters.header')
      .card-body
        .form-group
          .input-group
            = f.fields_for :search_query do |ff_s|
              .input-group-prepend.col-3.p-0#protocolSearchSelect
                = ff_s.select :search_drop, options_for_select(ProtocolFilter.search_filters, filterrific.search_query.try(:search_drop)), { prompt:  t('dashboard.protocol_filters.search_by') }, class: "selectpicker w-100", data: { style: 'btn btn-primary' }
              = ff_s.text_field :search_text, value: filterrific.search_query.try(:search_text), placeholder: t('dashboard.protocol_filters.search_placeholder'), class: 'form-control'
        .form-group.row
          = f.label :with_status, t('dashboard.protocol_filters.status'), class: 'col-4 col-form-label pr-0'
          .col-8
            = f.select :with_status, filterrific.select_options[:with_status], {}, class: "selectpicker", multiple: true, data: { none_selected_text: t('constants.prompts.any'), live_search: true }
        .form-group.row
          = f.label :with_organization, t('dashboard.protocol_filters.organization'), class: 'col-4 col-form-label pr-0'
          .col-8.drop-underneath
            = f.select :with_organization, nil, {}, class: "selectpicker", multiple: true, data: { none_selected_text: t('constants.prompts.any'), live_search: true } do
              = filterrific.select_options[:with_organization].each do |org_type, orgs|
                %optgroup{ label: org_type }
                  - orgs.each do |name, id|
                    %option{ value: id, selected: filterrific.with_organization && filterrific.with_organization.include?(id), data: {content: name} }
        - if admin
          .form-group.row
            = f.label :with_owner, t('dashboard.protocol_filters.owner'), class: 'col-4 col-form-label pr-0'
            .col-8
              = f.select :with_owner, filterrific.select_options[:with_owner], {}, class: "selectpicker owner-select", multiple: true, data: { none_selected_text: t('constants.prompts.any'), live_search: true }
        .form-group.row
          = f.label :show_archived, t('dashboard.protocol_filters.archived'), class: 'col-4 col-form-label pr-0'
          .col-8
            = f.check_box :show_archived, data: { toggle: 'toggle', on: t('dashboard.protocol_filters.archived'), off: t('dashboard.protocol_filters.unarchived'), style: 'btn-block' }
        - if admin
          %hr
          .form-group.row.mb-0
            = f.label "admin_filter_for_identity_#{current_user.id}", t('dashboard.protocol_filters.my_protocols'), class: 'col-6 col-form-label pr-0'
            .col-4.d-flex.align-items-center.justify-content-center
              = f.radio_button :admin_filter, "for_identity #{current_user.id}"
          .form-group.row.mb-0
            = f.label "admin_filter_for_admin_#{current_user.id}", t('dashboard.protocol_filters.my_admin_protocols'), class: 'col-6 col-form-label pr-0'
            .col-4.d-flex.align-items-center.justify-content-center
              = f.radio_button :admin_filter, "for_admin #{current_user.id}"
        - else
          = f.hidden_field :admin_filter, value: "for_identity #{current_user.id}"
      .card-footer.flex-wrap
        = f.submit t('actions.filter'), class: 'btn btn-block btn-primary mb-2'
        .col-lg-6.col-12.pl-0.pr-1
          %button.btn.btn-block.btn-outline-primary#saveProtocolFilters{ type: 'button', title: t('dashboard.protocol_filters.tooltips.save'), data: { toggle: 'tooltip', placement: 'top' } }<
            = icon('fas', 'save mr-2')
            = t('actions.save')
        .col-lg-6.col-12.pr-0.pl-1
          = link_to reset_filterrific_url, remote: true, title: t('dashboard.protocol_filters.tooltips.reset'), class: 'btn btn-block btn-outline-primary', data: { toggle: 'tooltip', placement: 'top' } do
            = succeed t('actions.reset') do
              = icon('fas', 'sync mr-2')

  = render 'dashboard/protocol_filters/saved_searches', protocol_filters: protocol_filters

-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.modal-dialog.modal-sm{ role: 'document' }
  .modal-content
    = form_for arm, url: move_visit_position_service_calendars_path, remote: true, method: :post, html: { id: 'moveVisitForm' } do |f|
      = hidden_field_tag :srid, service_request.try(:id)
      = hidden_field_tag :ssrid, sub_service_request.try(:id)
      = hidden_field_tag :arm_id, arm.id
      = hidden_field_tag :tab, params[:tab]
      = hidden_field_tag :page, params[:page]
      - params[:pages].each do |arm_id, page|
        = hidden_field_tag "pages[#{arm_id}]", page.to_i
      .modal-header
        %h3.modal-title
          = t(:proper)[:service_calendar][:move_visit][:header]
        %button.close{ type: 'button', data: { dismiss: 'modal' }, aria: { label: t('actions.close') } }
          %span{ aria: { hidden: 'true' } } &times;
      .modal-body
        .form-group
          = label_tag :visit_group_id, t(:visit_groups)[:form][:visit], class: 'required'
          = select_tag :visit_group_id, options_from_collection_for_select(arm.visit_groups, :id, :identifier, visit_group.try(:id)), include_blank: false, class: 'selectpicker', include_blank: true
        .form-group
          = label_tag :position, t(:visit_groups)[:form][:position], class: 'required'
          = select_tag :position, visit_position_options(arm, visit_group, position), class: 'selectpicker', include_blank: true, disabled: visit_group.nil?
        - if visit_group && position && visit_group.position != position - 1
          .form-group
            - min, max = move_visit_group_boundaries(visit_group, arm, position)
            = label_tag :day, VisitGroup.human_attribute_name(:day)
            = number_field_tag :day, min || max || visit_group.day, class: 'form-control', min: min, max: max, readonly: min == max
            - if min || max
              - if min == max
                %small.form-text.text-warning
                  = t('visit_groups.form.move_note')
              - else
                %small.form-text.text-muted
                  - if min
                    = t('constants.min', min: min)
                  - if max
                    = t('constants.max', max: max)
        - elsif visit_group
          = hidden_field_tag :day, visit_group.day
      .modal-footer
        %button.btn.btn-secondary{ type: 'button', data: { dismiss: 'modal' } }
          = t('actions.close')
        = f.submit t('actions.submit'), class: 'btn btn-primary'

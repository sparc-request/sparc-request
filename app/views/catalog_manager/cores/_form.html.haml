-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

= form_for @core, :url => catalog_manager_core_path, :remote => true, :id => 'entity_form' do |f|
  = hidden_field_tag 'org_unit[id]', @core.id # added for autocomplete to use
  = hidden_field_tag 'core[id]', @core.id
  .errorExplanation#errorExplanation{:style => 'display:none;'}

  #entity_description
    %p.org_tree= display_organization_tree(f.object)
    %fieldset.actions
      .legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}

    %br

    %fieldset#gen_info.parent.active
      .legend= t(:organization_form)[:gen_info]
      %fieldset.single_fieldset{:style => "display:block;"}
        %table
          %tr
            %th= f.label :name, t(:organization_form)[:name]
            %td= f.text_field :name
          %tr
            %th= f.label :abbreviation, t(:organization_form)[:abbreviation]
            %td= f.text_field :abbreviation
          %tr
            %th= t(:organization_form)[:description]
            %td= f.text_area :description, :rows => 8
          %tr
            %th= f.label :ack_language, t(:organization_form)[:ack_language]
            %td= f.text_area :ack_language, :rows => 8
          %tr
            %th= f.label :order, t(:organization_form)[:order]
            %td= f.text_field :order
          %tr
            %th= f.label :split_notify, t(:organization_form)[:split_notify]
            %td= f.check_box :process_ssrs
          %tr
            %th= f.label :disabled, t(:organization_form)[:disabled]
            %td= f.check_box :is_available, {:checked => (@core.is_available.nil? ? false : !@core.is_available) }, false, true
          %tr
            %th= t(:organization_form)[:tag_list]
            %td
              - Tag.all.each do |tag|
                %span{:style => "margin-right:10px;"}
                  %span= f.label (t(:tags)[tag.name.gsub(" ", "_").to_sym] ? t(:tags)[tag.name.gsub(" ", "_").to_sym] : tag.name.humanize)
                  %span= f.check_box :tag_list, { :multiple => true }, tag.name, nil

    %br

    = render :partial => 'catalog_manager/shared/available_statuses', :locals => {:f => f}

    %fieldset#user_rights.parent
      .legend= t(:organization_form)[:user_rights]
      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:super_users]
        #su_info= render :partial => 'catalog_manager/shared/super_users', :locals => {:entity => @core}

      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:service_providers]
        #sp_info= render :partial => 'catalog_manager/shared/service_providers', :locals => {:entity => @core}

      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:cm_rights]
        #cm_info= render :partial => 'catalog_manager/shared/catalog_managers', :locals => {:entity => @core}

      %fieldset
        .secondary_header= t(:organization_form)[:submission_emails]
        #se_info= render :partial => 'catalog_manager/shared/submission_emails', :locals => {:entity => @core}

    %br

    #cwf_wrapper{:style => @core.tag_list.include?("clinical work fulfillment") ? "display: block;" : "display: none;"}
      %fieldset#cwf_fieldset.parent
        .legend= t(:organization_form)[:clinical_work_fulfillment]
        %fieldset.single_fieldset
          %table
            %tr
              %th= t(:organization_form)[:clinical_providers]
          #cp_info= render :partial => 'catalog_manager/shared/clinical_providers', :locals => {:entity => @core}

      %br

    %fieldset#pricing.parent
      .legend= t(:organization_form)[:pricing]
      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:auto_price_adj]
        = render :partial => 'catalog_manager/shared/increase_decrease_rates', :locals => {:entity => @core, :can_edit_historical_data => @user.can_edit_historical_data_for?(@core)}

      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:subsidy_info]
        %table
          = f.fields_for :subsidy_map do |f_subsidy_map|
            %tr
              %th= f_subsidy_map.label :subsidy_max_percent, t(:organization_form)[:subsidy_max_percent]
              %td.subsidy_percentage= f_subsidy_map.text_field :max_percentage
            %tr
              %th= f_subsidy_map.label :subsidy_max_dollar, t(:organization_form)[:subsidy_max_dollar]
              %td.subsidy_dollar= f_subsidy_map.text_field :max_dollar_cap, value: number_with_precision(f_subsidy_map.object.max_dollar_cap, precision: 2)
            = render 'catalog_manager/shared/excluded_funding_sources', :entity => @core

    %br

    %fieldset.parent
      .legend= t(:organization_form)[:associated_surveys]
      %fieldset.single_fieldset
        #associated_survey_info= render :partial => 'catalog_manager/shared/associated_surveys', :locals => {:entity => @core}

    %br


    %fieldset.actions
      .legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}
      .ui-corner-all.blank_field_errors= t(:organization_form)[:errors]

:javascript
  $(document).ready( function() {
    Sparc.config.ready();
    Sparc.services.ready();
  })

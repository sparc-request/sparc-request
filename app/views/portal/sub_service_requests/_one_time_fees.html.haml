-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%h4= t(:fulfillments)[:services][:no_visits][:header]
- if !(@sub_service_request.one_time_fee_line_items.length >= 1)
  .blank_requests
    = t(:fulfillments)[:services][:no_visits][:no_requests]
- else
  #one_time_fee_table
    %table
      %thead
        %tr
          %th
          %th.services_selected= t(:fulfillments)[:services][:no_visits][:selected]
          %th= t(:fulfillments)[:services][:no_visits][:code]
          %th= t(:fulfillments)[:services][:no_visits][:number]
          %th= t(:fulfillments)[:services][:no_visits][:otf_unit_type]
          %th= t(:fulfillments)[:services][:no_visits][:number]
          %th= t(:fulfillments)[:services][:no_visits][:qty_type]
          %th= t(:fulfillments)[:services][:no_visits][:cost]
          %th= t(:fulfillments)[:services][:no_visits][:received]
          %th= t(:fulfillments)[:services][:no_visits][:in_process]
          %th= t(:fulfillments)[:services][:no_visits][:complete]
          %th= t(:fulfillments)[:services][:no_visits][:delete]
      %tbody
        - @sub_service_request.set_effective_date_for_cost_calculations
        - @sub_service_request.one_time_fee_line_items.each do |otf|
          %tr
            %td.expand_li{:'data-line_item_id' => otf.id}
              .ui-icon.ui-icon-triangle-1-e
            %td.otf_service_select
              - if otf.service.is_available
                = select_tag "line_item_service_id", options_for_select(candidate_service_options(@candidate_one_time_fees, true), otf.try(:service).try(:id)), :'data-line_item_id' => otf.id, :class => 'fulfillment_data'
              - else
                = otf.service.name + ' (Disabled)'
            %td= otf.try(:service).try(:charge_code)
            - if otf.try(:service).try(:current_effective_pricing_map).otf_unit_type == 'N/A'
              %td
              %td
              %td.otf_text_field{:style => "white-space:nowrap;overflow:hidden;"}
                = text_field_tag "line_item_quantity", otf.try(:quantity), :'data-line_item_id' => otf.id, :'data-line_item_quantity' => otf.quantity, :class => 'fulfillment_data'
              %td= otf.try(:service).try(:current_effective_pricing_map).try(:quantity_type)
            - else
              %td.otf_text_field{:style => "white-space:nowrap;overflow:hidden;"}
                = text_field_tag "line_item_units_per_quantity", otf.try(:units_per_quantity), :'data-line_item_id' => otf.id, :class => 'fulfillment_data'
              %td= otf.try(:service).try(:current_effective_pricing_map).try(:otf_unit_type)
              %td.otf_text_field{:style => "white-space:nowrap;overflow:hidden;"}
                %span{:style => "padding-right:5px;"} /
                = text_field_tag "line_item_quantity", otf.try(:quantity), :'data-line_item_id' => otf.id, :class => 'fulfillment_data'
              %td= otf.try(:service).try(:current_effective_pricing_map).try(:quantity_type)
            %td.otf_text_field{:style => "white-space:nowrap;overflow:hidden;"}
              %span= "$"
              = text_field_tag 'line_item_displayed_cost', number_with_precision(Service.cents_to_dollars(otf.direct_costs_for_one_time_fee), :precision => 2), :'data-line_item_id' => otf.id, :class => 'fulfillment_data'
            %td= otf.try(:created_at).try(:strftime, '%D')
            %td
              = text_field_tag "line_item_#{otf.id}_in_process_date_picker", otf.try(:in_process_date).try(:strftime, '%D'), :class => "date datepicker temp_datepicker"
              = hidden_field_tag "line_item_#{otf.id}_in_process_date", otf.try(:in_process_date).try(:strftime, "%F"), :'data-line_item_id' => otf.id, :class => 'fulfillment_data', :name => "line_item_in_process_date"
            %td
              = text_field_tag "line_item_#{otf.id}_complete_date_picker", otf.try(:complete_date).try(:strftime, '%D'), :class => "date datepicker temp_datepicker"
              = hidden_field_tag "line_item_#{otf.id}_complete_date", otf.try(:complete_date).try(:strftime, "%F"), :'data-line_item_id' => otf.id, :class => 'fulfillment_data', :name => "line_item_complete_date"
            %td= link_to(image_tag('portal/cancel.png'), 'javascript:void(0);', :'data-line_item_id' => otf.id, :'data-has_fulfillments' => one_time_fee_fulfillments?(otf.id), :class => 'delete_data')
          - unless otf.fulfillments.empty?
            %tr.fulfillment{:class => "li_#{otf.id}"}
              %th
              %th= t(:fulfillments)[:services][:no_visits][:date]
              %th= t(:fulfillments)[:services][:no_visits][:timeframe]
              %th= t(:fulfillments)[:services][:no_visits][:time]
              %th{:colspan => 6}= t(:fulfillments)[:services][:no_visits][:notes]
              %th
            - otf.fulfillments.each do |fulfillment|
              %tr.fulfillment{:class => "li_#{otf.id}"}
                %td
                %td
                  = text_field_tag "fulfillment_#{fulfillment.id}_date_picker", fulfillment.try(:date).try(:strftime, "%D"), :class => 'date datepicker'
                  = hidden_field_tag "fulfillment_#{fulfillment.id}_date", fulfillment.try(:date).try(:strftime, "%F"), :'data-fulfillment_id' => fulfillment.id, :class => 'fulfillment_data', :name => "fulfillment_date"
                %td= select_tag "fulfillment_timeframe", options_for_select(Fulfillment::QUANTITY_TYPES, fulfillment.try(:timeframe)), :'data-fulfillment_id' => fulfillment.id, :class => 'fulfillment_data', :include_blank=> '--- Select ---'
                
                %td.fulfillment_text_field= text_field_tag "fulfillment_time", fulfillment.try(:time), :'data-fulfillment_id' => fulfillment.id, :class => (fulfillment.timeframe.blank? ? 'fulfillment_data disabled_text_box' : 'fulfillment_data'), :disabled => fulfillment.timeframe.blank?
                %td.fulfillment_notes{:colspan => 6}= text_area_tag "fulfillment_notes", fulfillment.try(:notes), :'data-fulfillment_id' => fulfillment.id, :class => 'fulfillment_data', :cols => 50, :rows => 1
                %td= link_to(image_tag('portal/cancel.png'), 'javascript:void(0);', :'data-fulfillment_id' => fulfillment.id, :class => 'delete_data')
          %tr.fulfillment{:class => "li_#{otf.id}"}
            %td{:colspan => 11}
              = link_to "Add a Fulfillment", 'javascript:void(0);', :class => "add_fulfillment_link", :'data-line_item_id' => otf.id
        - @sub_service_request.unset_effective_date_for_cost_calculations

:javascript
  $(document).ready(function(){
    $(".li_#{@active}").show();
  });


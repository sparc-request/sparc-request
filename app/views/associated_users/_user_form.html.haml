-# Copyright Â© 2011-2017 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.modal-dialog#add-authorized-user-form
  .modal-content
    .modal-header
      %button.close{ type: 'button', data: { dismiss: 'modal' } }
        %span{ aria: { hidden: 'true' } } &times;
      %h4.text-center#modal-title
        = header_text
    .modal-body
      #modal_errors
      .row
        .col-lg-12
          .text-center
            %label
              = identity.display_name
            %a.btn.btn-xs.btn-danger.glyphicon.glyphicon-remove#new-associated-user-button{ href: "javascript:void(0);", data: { protocol_id: protocol.id, permission: 'true', toggle: "tooltip", animation: 'false', placement: 'right' }, title: "Remove" }
      = render 'associated_users/form/primary_pi_warning', protocol: protocol, identity: identity
      = form_for project_role, url: determine_url(dashboard, project_role), remote: true, html: { class: "protocol-role-form" } do |form| 
        - unless dashboard
          = hidden_field_tag :service_request_id, service_request.id
        = form.hidden_field :identity_id
        = form.hidden_field :protocol_id
        .row
          .col-lg-12
            = form.fields_for :identity do |identity_form|
              = user_form_group(name: :era_commons_name, classes: ['role_dependent commons_name', ['pi', 'primary-pi'].include?(form.object.role) ? '' : 'hidden'], form: identity_form) do
                = identity_form.text_field :era_commons_name, class: 'form-control'

              = user_form_group(name: :credentials, form: identity_form) do
                = identity_form.select :credentials, options_for_select(USER_CREDENTIALS, identity.credentials), { include_blank: t(:authorized_users)[:form_fields][:credentials_prompt] }, class: 'form-control selectpicker'

              = user_form_group(name: :credentials_other, classes: ['credentials_dependent other', identity_form.object.credentials == 'other' ? '' : 'hidden'], form: identity_form, title: t(:authorized_users)[:form_fields][:credentials_specify], required: true) do
                = identity_form.text_field :credentials_other, class: 'form-control'

              = render("dashboard/associated_users/professional_organizations", professional_organization: identity.professional_organization)

              = user_form_group(name: :phone, form: identity_form) do
                = identity_form.text_field :phone, class: 'form-control'

              = user_form_group(name: :subspecialty, classes: ['role_dependent subspecialty', ['pi', 'primary-pi'].include?(form.object.role) ? '' : 'hidden'], form: identity_form) do
                = identity_form.select :subspecialty, options_for_select((SUBSPECIALTIES.sort), identity.subspecialty), { include_blank: t(:authorized_users)[:form_fields][:subspecialty_prompt] }, class: 'form-control selectpicker'

            = user_form_group(name: :role, form: form, required: true) do
              = form.select :role, options_for_select(USER_ROLES, form.object.role), { include_blank: t(:authorized_users)[:form_fields][:role_prompt] }, class: 'form-control selectpicker'

            = user_form_group(name: :role_specify, classes: ['role_dependent other', form.object.role == 'other' ? '' : 'hidden'], form: form, required: true) do
              = form.text_field :role_other, class: 'form-control'

            - if USE_EPIC && protocol != nil && protocol.selected_for_epic
              = user_form_group(name: :epic_access, form: form, required: true,
                data: { toggle: 'tooltip', placement: 'right', delay: '{"show":"500"}' },
                title: t(:authorized_users)[:tooltips][:epic_access]) do
                = label_tag nil, nil, class: 'radio-inline' do
                  = form.radio_button :epic_access, false, class: 'epic_access'
                  No
                = label_tag nil, nil, class: 'radio-inline' do
                  = form.radio_button :epic_access, true, class: 'epic_access'
                  Yes

            = render 'associated_users/form/project_rights', form: form, dashboard: dashboard, admin: admin

    .modal-footer
      .center-block
        %button.btn.btn-default#protocol-role-close{ type: 'button' }
          = t(:actions)[:close]
        %button.btn.btn-primary#protocol-role-save
          = t(:actions)[:save]

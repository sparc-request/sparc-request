-# Copyright Â© 2011-2016 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
= hidden_field_tag :search_query, filterrific_params[:search_query]
= hidden_field_tag :show_archived, filterrific_params[:show_archived]
= hidden_field_tag :with_status, filterrific_params[:with_status]
= hidden_field_tag :with_organization, filterrific_params[:with_organization]
= hidden_field_tag :with_owner, filterrific_params[:with_owner]
= hidden_field_tag :admin_filter, filterrific_params[:admin_filter]
= hidden_field_tag :page, page
.panel.panel-primary
  .panel-heading
    .pull-left
      %h2.panel-title
        = t(:dashboard)[:protocols][:table][:header]
      = page_entries_info protocols, {model: "Protocol"}
      = render_filterrific_spinner
    .pull-right
      = link_to t(:dashboard)[:protocols][:table][:exporter], dashboard_protocols_path(:format => :csv, :filterrific => @filterrific.to_hash), class: 'btn btn-success'
      .btn-group#create-new-protocol-select
        %button.btn.btn-success.dropdown-toggle#create-new-study-button{ type: 'button', 'aria-expanded' => 'false', data: { toggle: 'dropdown' }}
          %span
            .glyphicon.glyphicon-plus
            = t(:dashboard)[:protocols][:table][:new_protocol]
        %ul.dropdown-menu{ role: 'menu' }
          %li
            = link_to t(:dashboard)[:protocols][:table][:new_study], new_dashboard_protocol_path(protocol_type: 'study')
          %li
            = link_to t(:dashboard)[:protocols][:table][:new_project], new_dashboard_protocol_path(protocol_type: 'project')
    .clearfix
  %table.table.table-hover
    %tr
      %th.col-sm-1
        = t(:dashboard)[:protocols][:table][:id]
        %span.protocol-sort{ name: 'id', data: { sort_name: 'id', sort_order: 'asc' } }
          %span.glyphicon.glyphicon-triangle-top.asc
          %span.glyphicon.glyphicon-triangle-bottom.desc.sort-active
      %th.col-sm-4
        = t(:dashboard)[:protocols][:table][:short_title]
        %span.protocol-sort{ name: 'short_title', data: { sort_name: 'short_title', sort_order: 'asc' } }
          %span.glyphicon.glyphicon-triangle-top.asc
          %span.glyphicon.glyphicon-triangle-bottom.desc
      %th.col-sm-3
        = t(:dashboard)[:protocols][:table][:pis]
        %span.protocol-sort{ name: 'pis', data: { sort_name: 'pis', sort_order: 'asc' } }
          %span.glyphicon.glyphicon-triangle-top.asc
          %span.glyphicon.glyphicon-triangle-bottom.desc
      %th.col-sm-2.text-center
        = t(:dashboard)[:protocols][:table][:requests]
      %th.col-sm-2.text-center
        = t(:dashboard)[:protocols][:table][:archive]
    - protocols.each do |protocol|
      %tr.protocols_index_row{ data: { protocol_id: protocol.id }}
        %td.id
          %button.btn.btn-sm.btn-info
            = protocol.id
        %td.title
          = short_title_display protocol
        %td.pis
          = pis_display protocol
        %td.requests.text-center
          = display_requests_button(protocol, admin_protocols, current_user)
        %td.archive.text-center
          = display_archive_button(protocol, admin_protocols, current_user)
  .pull-right
    = will_paginate protocols, renderer: BootstrapPagination::Rails

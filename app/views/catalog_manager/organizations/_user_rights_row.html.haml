-# Copyright Â© 2011-2019 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- new_user ||= false
- su = get_user_rights(user_rights[:super_users], user.id)
- cm = get_user_rights(user_rights[:catalog_managers], user.id)
- cp = get_user_rights(user_rights[:service_providers], user.id)
- cm_disabled = !organization.parents.detect{|org| user.catalog_managers.pluck(:organization_id).include?(org.id)}.nil?
- su_disabled = !organization.parents.detect{|org| user.super_users.pluck(:organization_id).include?(org.id)}.nil?

.row.form_row{ id: "user-rights-row-#{user.id}", data: { identity_id: user.id } }
  %div{class: "#{(organization.type == "Institution" or !organization.process_ssrs) ? 'col-sm-6' : 'col-sm-3'}"}
    = "#{user.full_name}, #{user.email}"
  .col-sm-3.text-center
    - if su_disabled
      = check_box_tag :super_user, true, !su.nil?, { class: "super-user-checkbox", disabled: true, title: t(:catalog_manager)[:organization_form][:user_rights][:duplicate_super_user], data: { identity_id: user.id, organization_id: organization.id, toggle: 'tooltip', placement: 'top'} }
    -else
      = check_box_tag :super_user, true, !su.nil?, { class: "super-user-checkbox", data: { identity_id: user.id, organization_id: organization.id } }

    - if !su.nil?
      .form_row
      = label_tag :access_empty_protocols, t(:catalog_manager)[:organization_form][:user_rights][:access_empty_protocols], class: 'non_bold_label'
      = check_box_tag :access_empty_protocols, true, su.try(:access_empty_protocols), { id: "su-access-empty-protocols-#{user.id}", class: "su-access-empty-protocols", data: { identity_id: user.id, organization_id: organization.id } }

  .col-sm-2.text-center
    - if cm_disabled
      = check_box_tag :catalog_manager, true, !cm.nil?, { class: "catalog-manager-checkbox", disabled: true, title: t(:catalog_manager)[:organization_form][:user_rights][:duplicate_catalog_manager], data: { identity_id: user.id, organization_id: organization.id, toggle: 'tooltip', placement: 'top'} }
    -else
      = check_box_tag :catalog_manager, true, !cm.nil?, { class: "catalog-manager-checkbox", data: { identity_id: user.id, organization_id: organization.id } }

    - if !cm.nil?
      .form_row
      = label_tag :edit_historic_data, t(:catalog_manager)[:organization_form][:user_rights][:edit_historic_data], class: 'non_bold_label'
      = check_box_tag :edit_historic_data, true, cm.try(:edit_historic_data), { id: "cm-edit-historic-data-#{user.id}", class: "cm-edit-historic-data", data: { identity_id: user.id, organization_id: organization.id } }
  - unless organization.type == "Institution" or !organization.process_ssrs
    .col-sm-3.text-center
      = check_box_tag :service_provider, true, !cp.nil?, { class: "service-provider-checkbox", data: { identity_id: user.id, organization_id: organization.id } }
      - if !cp.nil?
        .form_row
        = label_tag :primary_contact, t(:catalog_manager)[:organization_form][:user_rights][:primary_contact], class: 'non_bold_label', title: t(:catalog_manager)[:organization_form][:user_rights][:tooltips][:primary_contact], data: { toggle: 'tooltip', placement: 'left', delay: '{"show":"500"}'}
        = check_box_tag :is_primary_contact, true, cp.try(:is_primary_contact), { id: "sp-is-primary-contact-#{user.id}", class: "sp-is-primary-contact", data: { identity_id: user.id, organization_id: organization.id } }

        = label_tag :hold_emails, t(:catalog_manager)[:organization_form][:user_rights][:hold_emails], class: 'non_bold_label'
        = check_box_tag :hold_emails, true, cp.try(:hold_emails), { id: "sp-hold-emails-#{user.id}", class: "sp-hold-emails", data: { identity_id: user.id, organization_id: organization.id } }
  .col-sm-1.text-center
    - if new_user or !user_rights.values.flatten.map(&:identity_id).include?(user.id)
      %button.btn.btn-xs.btn-danger.cancel-user-rights
        %span.glyphicon.glyphicon-remove
    -else
      %button.btn.btn-xs.btn-danger.remove-user-rights{ data: { identity_id: user.id, organization_id: organization.id } }
        %span.glyphicon.glyphicon-remove

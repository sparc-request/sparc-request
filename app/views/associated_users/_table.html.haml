-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.card.w-100#authorizedUsersCard
  .card-header.bg-primary.text-white{ class: action_name == 'protocol' && service_request.previously_submitted? ? 'collapsed' : 'show', data: { toggle: 'collapse', target: '#authorizedUsers' } }
    %h3.mb-0<
      = icon('fas', 'caret-down pr-1 mr-2')
      = t('authorized_users.header')
  .collapse#authorizedUsers{ class: action_name == 'protocol' && service_request.previously_submitted? ? '' : 'show' }
    #associatedUsersTableToolbar
      - if in_dashboard?
        - if @malformed_project_role
          #epic_rights_error_alert.alert.alert-danger.float-right
            = raw(t('dashboard.protocols.epic_user_error', user_name: @malformed_project_role.identity.full_name))
        = new_authorized_user_button(protocol_id: protocol.id, permission: permission_to_edit || admin)
      - elsif !in_review?
        = new_authorized_user_button(srid: service_request.id)
    - url = in_dashboard? ? dashboard_associated_users_path(format: :json, protocol_id: protocol.id) : associated_users_path(format: :json, srid: service_request.id)
    %table#authorizedUsersTable{ data: { toggle: 'table', search: 'true', 'show-columns' => 'true', 'show-refresh' => 'true', url: url, toolbar: '#associatedUsersTableToolbar' } }
      %thead.bg-light
        %tr
          %th{ data: { field: 'name', sortable: 'true' } }
            = Identity.human_attribute_name(:name)
          %th{ data: { field: 'role', sortable: 'true' } }
            = ProjectRole.human_attribute_name(:role)
          %th{ data: { field: 'email', sortable: 'true' } }
            = Identity.human_attribute_name(:email)
          %th{ data: { field: 'phone', sortable: 'true' } }
            = Identity.human_attribute_name(:phone)
          %th{ data: { field: 'project_rights', sortable: 'true' } }
            = ProjectRole.human_attribute_name(:project_rights)
          - if Setting.get_value('use_epic') && protocol.selected_for_epic?
            %th{ data: { field: 'epic_access', align: 'center', sortable: 'true' } }
              = ProjectRole.human_attribute_name(:epic_access)
          - unless in_review?
            %th{ data: { field: 'actions', align: 'center' } }
              = t('actions.actions')

-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- required_class  = options[:required] ? 'required' : ''

/* from information */
- from_id     = options[:for] ? "#{options[:for]}_from" : "#{field.delete(" ").underscore}_from"
- from_name   = options[:for] ? "report[#{options[:for]}_from]" : "report[#{from_id}]"
- from_label  = "#{options[:from_label] || "From"}"
- from_date   = options[:from] ? format_date(options[:from]) : nil

/* to information */
- to_id     = options[:for] ? "#{options[:for]}_to" : "#{field.delete(" ").underscore}_to"
- to_name   = options[:for] ? "report[#{options[:for]}_to]" : "report[#{to_id}]"
- to_label  = "#{options[:to_label] || "To"}"
- to_date   = options[:to] ? format_date(options[:to]) : nil

.form-row
  .form-group.col-12.mb-0
    = label_tag nil, field_label, class: required_class
  .form-group.col-sm-6.mb-0
    .input-group.datetimepicker.date.from-date{ id: from_id, data: { target_input: 'nearest' } }
      = text_field_tag from_name, nil, class: 'datetimepicker-input from-input form-control', placeholder: from_label, data: { target: "##{from_id}" }
      .input-group-append{ data: { toggle: 'datetimepicker', target: "##{from_id}" } }
        %span.input-group-text
          = icon('fas', 'calendar-alt')

  .form-group.col-sm-6.mb-0
    .input-group.datetimepicker.date.to-date{ id: to_id, data: { target_input: 'nearest' } }
      = text_field_tag to_name, nil, class: 'datetimepicker-input to-input form-control', placeholder: to_label, data: { target: "##{to_id}" }
      .input-group-append{ data: { toggle: 'datetimepicker', target: "##{to_id}" } }
        %span.input-group-text
          = icon('fas', 'calendar-alt')

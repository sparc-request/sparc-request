-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%h3
  %a{:href => '#'} Effective on #{pricing_map.try(:[], 'effective_date').try(:to_date).try(:strftime, "%-m/%d/%Y")} - Display on #{pricing_map.try(:[], 'display_date').try(:to_date).try(:strftime, "%-m/%d/%Y")}
.pricing_map_form
  = hidden_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][id]", "#{pricing_map ? pricing_map.id : 'blank'}"
  = hidden_field_tag :pricing_map_id, pricing_map.try(:id)
  - if pricing_map_disabled
    %input{:name => "diabled_fields_present", :value => 'true', :type => 'hidden'}
  - if pricing_map.id.blank?
    %input.remove_pricing_map{:type => 'button', :value => 'Remove Pricing Map', :style => 'width:auto;'}
  - rate_map = @service.get_rate_maps(pricing_map.try(:[], 'display_date').try(:to_date).try(:strftime, "%F"), (pricing_map.try(:[], 'full_rate'))) rescue {}

  %fieldset
    %legend= t(:pricing_map_form)[:dates]
    %table
      %tbody
        %tr
          %th= t(:pricing_map_form)[:display_date]
          %td{:colspan => 2, :class => "include_date_picture"}
            %input.pricing_map_display_date.validate{:type => 'text', :value => pricing_map.try(:[], 'display_date'),  :class => "#{pricing_map_disabled ? 'disabled_datepicker' : 'datepicker'}", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :past_date => (can_edit_historical_data ? 'true' : 'false')}
            = hidden_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][display_date]", pricing_map.try(:[], 'display_date'), :class => 'submitted_date pricing_map_display_date_hidden', :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :date_type => '.pricing_map_display_date_hidden', :entity_name => entity.try(:name), :entity_id => entity.try(:id), :entity_type => entity.try(:class).to_s.downcase
        %tr
          %th= t(:pricing_map_form)[:effective_date]
          %td.include_date_picture{:colspan => 2}
            %input.pricing_map_effective_date.validate{:type => 'text', :value => pricing_map.try(:[], 'effective_date'), :class => "#{pricing_map_disabled ? 'disabled_datepicker' : 'datepicker'}", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :past_date => (can_edit_historical_data ? 'true' : 'false')}
            = hidden_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][effective_date]", pricing_map.try(:[], 'effective_date'), :class => 'submitted_date pricing_map_effective_date_hidden', :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :date_type => '.pricing_map_effective_date_hidden', :entity_name => entity.try(:name), :entity_id => entity.try(:id), :entity_type => entity.try(:class).to_s.downcase

  %fieldset
    %legend= t(:pricing_map_form)[:rates]
    %table
      %tbody
        %tr
          %th= t(:pricing_map_form)[:service_rate]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][full_rate]", Service.cents_to_dollars(pricing_map.try(:[], 'full_rate') ), :class => 'service_rate validate rate_field', :old_value => Service.cents_to_dollars(pricing_map.try(:[], 'full_rate') ), :rate_type => "Service", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :organization_id => @service.organization.id, :display => 'Service Rate'
        %tr
          %th
          %td.set_rate{:style => 'font-size: 12px;'} CALCULATED
          %td.rate_field{:style => 'font-size: 12px;'} OVERRIDE
        %tr.federal_rate_row
          %th= t(:pricing_map_form)[:federal_rate]
          %td.set_rate= rate_map.try(:[], 'federal_rate')
          %td= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][federal_rate]", Service.cents_to_dollars(pricing_map.try(:[], 'federal_rate')), :class => 'rate_field', :old_value => Service.cents_to_dollars(pricing_map.try(:[], 'federal_rate') ), :rate_type => "Federal", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Federal Rate', value: number_with_precision(Service.cents_to_dollars(pricing_map.try(:[], 'federal_rate')), precision: 2)
        %tr.corporate_rate_row
          %th= t(:pricing_map_form)[:corporate_rate]
          %td.set_rate= rate_map.try(:[], 'corporate_rate')
          %td= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][corporate_rate]", Service.cents_to_dollars(pricing_map.try(:[],  'corporate_rate')), :class => 'rate_field', :old_value => Service.cents_to_dollars(pricing_map.try(:[], 'corporate_rate') ), :rate_type => "Corporate", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Corporate Rate', value: number_with_precision(Service.cents_to_dollars(pricing_map.try(:[],  'corporate_rate')), precision: 2)
        %tr.other_rate_row
          %th= t(:pricing_map_form)[:other_rate]
          %td.set_rate= rate_map.try(:[], 'other_rate')
          %td= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][other_rate]", Service.cents_to_dollars(pricing_map.try(:[], 'other_rate')), :class => 'rate_field', :old_value => Service.cents_to_dollars(pricing_map.try(:[], 'other_rate') ), :rate_type => "Other", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Other Rate', value: number_with_precision(Service.cents_to_dollars(pricing_map.try(:[], 'other_rate')), precision: 2)
        %tr.member_rate_row
          %th= t(:pricing_map_form)[:member_rate]
          %td.set_rate= rate_map.try(:[], 'member_rate')
          %td= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][member_rate]", Service.cents_to_dollars(pricing_map.try(:[], 'member_rate')), :class => 'rate_field', :old_value => Service.cents_to_dollars(pricing_map.try(:[], 'member_rate') ), :rate_type => "Member", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Member Rate', value: number_with_precision(Service.cents_to_dollars(pricing_map.try(:[], 'member_rate')), precision: 2)
        %tr
          %th
            %td.set_rate{:colspan => 2, :style => "font-size: 12px"}= t(:pricing_map_form)[:rate_disclaimer]

  %fieldset
    %legend= t(:pricing_map_form)[:per_patient]
    %table{:style => @service.one_time_fee ? "display:none;" : per_patient_display_style(pricing_map), :id => "pp_fields_#{pricing_map.try(:id)}"}
      %tbody
        %tr
          %th= t(:pricing_map_form)[:clinical_quantity_type]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][unit_type]", pricing_map.try(:[], 'unit_type'), :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :class => "service_unit_type per_patient_validate", :'data-pricing_map_id' => pricing_map.try(:id), :id => "clinical_quantity_#{pricing_map.try(:id)}"
        %tr
          %th= t(:pricing_map_form)[:unit_factor]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][unit_factor]", pricing_map.try(:[], 'unit_factor') || 1, :class => "unit_field service_unit_factor per_patient_validate", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Unit Factor', :'data-pricing_map_id' => pricing_map.try(:id), :id => "unit_factor_#{pricing_map.try(:id)}"
        %tr
          %th= t(:pricing_map_form)[:unit_minimum]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][unit_minimum]", pricing_map.try(:[], 'unit_minimum') || 1, :class => "unit_field service_unit_minimum per_patient_validate", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Quantity Minimum', :'data-pricing_map_id' => pricing_map.try(:id), :id => "unit_minimum_#{pricing_map.try(:id)}"

  %fieldset
    %legend= t(:pricing_map_form)[:one_time_fee]
    %table{:style => @service.one_time_fee ? "" : "display:none;", :id => "otf_fields_#{pricing_map.try(:id)}"}
      %tbody
        %tr
          %th= t(:pricing_map_form)[:otf_unit_type]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][otf_unit_type]", pricing_map.try(:[], 'otf_unit_type') || 'N/A', :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :class => 'otf_unit_type otf_validate', :id => "otf_unit_type_#{pricing_map.try(:id)}", :'data-pricing_map_id' => pricing_map.try(:id)
        %tr
          %th= t(:pricing_map_form)[:quantity_type]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][quantity_type]", pricing_map.try(:[], 'quantity_type'), :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :class => 'otf_quantity_type otf_validate', :'data-pricing_map_id' => pricing_map.try(:id), :id => "otf_quantity_type_#{pricing_map.try(:id)}"
        %tr
          %th= t(:pricing_map_form)[:otf_quantity_minimum]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][quantity_minimum]", pricing_map.try(:[], 'quantity_minimum') || 1, :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :class => 'unit_field otf_quantity_minimum otf_validate', :display => 'Quantity Minimum', :'data-pricing_map_id' => pricing_map.try(:id), :id => "otf_quantity_minimum_#{pricing_map.try(:id)}"
        %tr
          %th
            %td.otf_attributes{:style => "text-align:center !important;", :id => "otf_attributes_#{pricing_map.try(:id)}"}= display_otf_attributes(pricing_map)
        %tr
          %th= t(:pricing_map_form)[:unit_factor]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][unit_factor]", pricing_map.try(:[], 'unit_factor') || 1, :class => "unit_field service_unit_factor per_patient_validate", :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Unit Factor', :'data-pricing_map_id' => pricing_map.try(:id), :id => "unit_factor_#{pricing_map.try(:id)}"
        %tr
          %th= t(:pricing_map_form)[:unit_maximum]
          %td{:colspan => 2}= text_field_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][units_per_qty_max]", pricing_map.try(:[], 'units_per_qty_max') || 10000, :class => 'unit_field otf_unit_max otf_validate', :disabled => pricing_map_disabled, :readonly => pricing_map_disabled, :display => 'Unit Maximum', :id => "otf_unit_max_#{pricing_map.try(:id)}"

        - if USE_INDIRECT_COST
          %tr
            %th= t(:pricing_map_form)[:exclude_from_indirect_cost]
            %td{:colspan => 2}
              = check_box_tag "pricing_maps[#{pricing_map.try(:[], 'id') || 'blank_pricing_map'}][exclude_from_indirect_cost]", true, pricing_map.try(:[], 'exclude_from_indirect_cost'), :style => 'width: 250px;', :disabled => pricing_map_disabled, :readonly => pricing_map_disabled

:javascript
  $(document).ready( function() {
    Sparc.services.create_accordion('.pricing_map_accordion')
    $('.service_rate').formatCurrency();
  });

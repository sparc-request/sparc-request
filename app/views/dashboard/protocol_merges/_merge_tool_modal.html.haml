-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.modal-dialog#protocol_merge_container
  .modal-content
    = form_for protocol_merge, url: perform_protocol_merge_dashboard_protocol_merge_path, id: 'protocolMergeForm', method: :put, remote: true do |f|
      = f.hidden_field :confirmed, value: false
      .modal-header
        %h3.modal-title
          = t(:dashboard)[:protocol_merge][:modal_header]
        %button.close{ type: 'button', data: { dismiss: 'modal' }, aria: { label: t('actions.close') } }
          %span{ aria: { hidden: 'true' } } &times;
      .modal-body#protocol-merges-container
        #flashContainerModal
        .form
          .form-group
            = f.label 'master_protocol_id', t(:dashboard)[:protocol_merge][:enter_master_protocol], class: 'required'
            = f.text_field 'master_protocol_id', id: 'master_protocol_id', class: 'form-control'
          .form-group
            = f.label 'merged_protocol_id', t(:dashboard)[:protocol_merge][:enter_merged_protocol], class: 'required'
            = f.text_field 'merged_protocol_id', id: 'merged_protocol_id', class: 'form-control'
      .modal-footer
        %button.btn.btn-secondary{ type: 'button', data: { dismiss: 'modal' } }
          = t('actions.close')
        = f.submit t(:dashboard)[:protocol_merge][:perform_protocol_merge], class: 'btn btn-primary', id: 'merge-button'
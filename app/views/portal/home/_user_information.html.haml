-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.user-information-body
  %p
    = @user.full_name
    |
    = @user.email
= link_to "Show All Projects/Studies", 'javascript:void(0)', :class => "archive_button", data: { showing_archived: '0' }
.notifications-link
  = link_to 'javascript:void(0)', :class => "hyperlink" do
    = image_tag @user.unread_notification_count(@user) >= 1 ? 'portal/notification_white.png' : 'portal/unreadnotification_white.png', :class => 'left'
    .notifications-text.left
      = pluralize(@user.unread_notification_count(@user), t(:protocol_information)[:note_count])
  .notifications_popup
    %table
      %thead
        %tr
          %th
          %th SRID:
          %th From:
          %th Subject:
          %th Time:
      %tbody
        - @user.all_notifications.reverse.first(3).each do |notification|
          %tr{:'data-notification_id' => notification.id, :'data-sub_service_request_id' => @sub_service_request.try(:id), :class => notification.try(:user_notifications_for_current_user, @user).try(:last).try(:read) ? "read_notification" : "unread_notification"}
            %td.image_placeholder
              %div
            %td.srid
              %div= notification.sub_service_request.display_id
            %td.sender
              %div= notification.try(:messages).try(:last).try(:sender).try(:full_name)
            %td.subject
              %div= notification.try(:messages).try(:last).try(:subject)
            %td= received_at(notification)
    = link_to "View All", portal_notifications_path, :class => "view_all_link"
.clear

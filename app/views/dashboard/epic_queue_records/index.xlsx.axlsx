# Copyright Â© 2011-2018 MUSC Foundation for Research Development
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided with the distribution.

# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

wb      = xlsx_package.workbook
header  = wb.styles.add_style alignment: { horizontal: :center, vertical: :center }, b: true

wb.add_worksheet(name: "Epic Queue Records") do |sheet|
  sheet.add_row [t(:epic_queues)[:sent_protocols], t(:epic_queues)[:notes], t(:epic_queues)[:PIs], t(:epic_queues)[:date], t(:epic_queues)[:status], t(:epic_queues)[:type], t(:epic_queues)[:by]], style: [header, header, header, header, header, header, header]

  @epic_queue_records.each do |eqr|
    sheet.add_row [
      format_protocol(eqr.protocol),
      eqr.notes.length,
      format_pis(eqr.protocol),
      format_epic_queue_created_at(eqr),
      eqr.status.capitalize,
      eqr.origin.try(:titleize),
      eqr.try(:identity).try(:full_name)
    ]
  end
end

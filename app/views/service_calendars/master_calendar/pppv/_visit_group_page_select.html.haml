-# Copyright Â© 2011-2022 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- url_data = { srid: service_request.try(:id), ssrid: sub_service_request.try(:id), pages: pages, arm_id: arm.id, tab: tab, show_draft: @show_draft, show_unchecked: @show_unchecked }

- if consolidated
  - path_method = method(:view_full_calendar_service_calendars_path)
- elsif merged
  - path_method = method(:merged_calendar_service_calendars_path)
- else
  - path_method = method(:table_service_calendars_path)

.d-flex
  = link_to icon('fas', 'arrow-left'), path_method.call(url_data.merge(page: page - 1)), remote: true, class: ['btn btn-primary mr-1', page == 1 ? 'disabled' : ''], tabindex: 0, title: t('calendars.pppv.header_fields.page_select.previous'), data: { toggle: 'tooltip' }
  = Dashboard::ServiceCalendars.build_visits_select(arm, page, path_method.call(url_data))
  = link_to icon('fas', 'arrow-right'), path_method.call(url_data.merge(page: page + 1)), remote: true, class: ['btn btn-primary ml-1', ((page + 1) * 5) - 4 > arm.visit_count ? 'disabled' : ''], title: t('calendars.pppv.header_fields.page_select.next'), tabindex: 0, data: { toggle: 'tooltip' }

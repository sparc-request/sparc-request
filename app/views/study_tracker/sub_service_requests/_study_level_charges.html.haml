-# Copyright Â© 2011-2016 MUSC Foundation for Research Development.
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- if !(@sub_service_request.one_time_fee_line_items.length >= 1)
  .blank_requests
    = t(:fulfillments)[:services][:no_visits][:no_requests]
- else
  .study_level_charges
    = nested_form_for @sub_service_request, :url => study_tracker_sub_service_request_path do |f|
      .cwf_one_time_fee_service
        %table
          %thead
            %tr.top_header
              %th.top.service_otf_header= t(:fulfillments)[:services][:no_visits][:service]
              %th.top.number_otf_header= t(:fulfillments)[:services][:no_visits][:number]
              %th.top.otf_type_header= t(:fulfillments)[:services][:no_visits][:otf_unit_type]
              %th.top.number_otf_header= t(:fulfillments)[:services][:no_visits][:number]
              %th.top.otf_type_header= t(:fulfillments)[:services][:no_visits][:qty_type]
              %th{:colspan => 2}
            %tr
              %td{:colspan => 7}
                = f.fields_for :line_items, @sub_service_request.one_time_fee_line_items do |otf_form|
                  %table{id: "cwf_fulfillment_#{otf_form.object.id}"}
                    %thead
                      %tbody.otf_service_tbody
                        %tr{:class => "service_tr"}
                          %td.cwf_otf_service= otf_form.object.try(:service).name
                          - if otf_form.object.try(:service).try(:current_effective_pricing_map).otf_unit_type == 'N/A'
                            %td.quantity_otf_header
                            %td.quantity_type_otf_header
                            %td.quantity_otf_header= otf_form.object.try(:quantity)
                            %td.quantity_type_otf_header= otf_form.object.try(:service).try(:current_effective_pricing_map).try(:quantity_type)
                          - else
                            %td.quantity_otf_header= otf_form.object.try(:quantity)
                            %td.quantity_type_otf_header= otf_form.object.try(:service).try(:current_effective_pricing_map).try(:quantity_type)
                            %td.quantity_otf_header{:style => "white-space:nowrap;overflow:hidden;"}
                              %span{:style => "padding-right:5px;"} /
                              = otf_form.object.try(:units_per_quantity)
                            %td.quantity_type_otf_header= otf_form.object.try(:service).try(:current_effective_pricing_map).try(:otf_unit_type)
                          %td{:colspan => 2}
                        %tr.fulfillment_fields.fulfillment_header{:style => "#{'display:none;' if otf_form.object.fulfillments.empty?}", :class => "fulfillments_#{otf_form.object.id}"}
                          %th{:colspan => 7, :class => 'ui-accordion-header ui-helper-reset ui-state-default ui-accordion-icons ui-accordion-header-active ui-state-active ui-corner-top'}
                            %span.ui-accordion-header-icon.ui-icon.ui-icon-triangle-1-s
                            Fulfillments
                        %tr.fulfillment_fields.study_level_charges{:style => "#{'display:none;' if otf_form.object.fulfillments.empty?}", :class => "fulfillments_#{otf_form.object.id}"}
                          %th= t(:fulfillments)[:services][:no_visits][:date]
                          %th= t(:fulfillments)[:services][:no_visits][:number]
                          %th= t(:fulfillments)[:services][:no_visits][:otf_unit_type]
                          %th= t(:fulfillments)[:services][:no_visits][:number]
                          %th= t(:fulfillments)[:services][:no_visits][:qty_type]
                          %th{:colspan => "2"}= t(:fulfillments)[:services][:no_visits][:notes]
                        = otf_form.fields_for :fulfillments, wrapper: false do |fulfillment_form|
                          %tr.fields.study_level_charges
                            %td= fulfillment_form.datepicker :formatted_date, size: 10, dateFormat: "m/dd/yy", :class => "fulfillment_date", :readonly => true
                            %td.cwf_otf_text_field= fulfillment_form.text_field :unit_quantity, :class => 'fulfillment_unit_quantity'
                            %td.cwf_otf_text_field= fulfillment_form.select :unit_type, options_for_select(Fulfillment::UNIT_TYPES, fulfillment_form.object.unit_type), {}, :class => 'fulfillment_unit_type'
                            %td.cwf_otf_text_field= fulfillment_form.text_field :quantity, :class => 'fulfillment_quantity'
                            %td.cwf_otf_text_field
                              = fulfillment_form.select :quantity_type, options_for_select(Fulfillment::CWF_QUANTITY_TYPES, fulfillment_form.object.quantity_type), {}, :class => 'fulfillment_quantity_type'
                            %td.cwf_otf_text_field= fulfillment_form.text_area :notes, :cols => 25, :rows => 1, :class => 'fulfillment_notes'
                            %td= fulfillment_form.link_to_remove '', :class => "cwf_fulfillments fulfillments"
                      %tbody
                        %tr
                          %td= otf_form.link_to_add t(:study_tracker)[:otf_charges][:add], :fulfillments, data: { target: "#cwf_fulfillment_#{otf_form.object.id}"}, class: "fulfillments cwf_fulfillments", :'data-otf_id' => otf_form.object.id, onclick: "$('.fulfillments_#{otf_form.object.id}').show()"
                        %tr
      %p.buttons= f.submit t(:study_tracker)[:save], :class => 'study_charges_submit'
